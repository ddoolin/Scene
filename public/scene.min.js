window.Scene.HomeController = function() {
    var a = this;
    this.createMap = function(b) {
        localStorage.setItem("currentLatitude", b.coords.latitude), localStorage.setItem("currentLongitude", b.coords.longitude);
        var c, d, e = b.coords.latitude, f = b.coords.longitude;
        d = {
            center: new google.maps.LatLng(e, f),
            zoom: 12,
            streetViewControl: !1,
            panControl: !1,
            mapTypeControl: !0,
            zoomControlOptions: {
                position: google.maps.ControlPosition.LEFT_CENTER
            },
            mapTypeId: google.maps.MapTypeId.ROADMAP
        }, c = new google.maps.Map(document.getElementById("map_canvas"), d), window.Scene.map = c, 
        a.populateMap();
    }, this.formatDate = function(a) {
        var a = new Date(a), b = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ], c = b[a.getDay()], d = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ];
        return month = d[a.getMonth()], monthDay = a.getDate(), year = a.getFullYear(), 
        formattedDate = c + ", " + month + " " + monthDay + ", " + year, formattedDate;
    }, this.formatTime = function(a) {
        var b, a = new Date(a), c = a.getHours(), d = a.getMinutes(), e = "am";
        return c > 12 ? (c -= 12, e = "pm") : 12 === c ? e = "pm" : 0 === c && (c = 12, 
        e = "am"), b = c + ":" + ((10 > d ? "0" : "") + d) + " " + e;
    }, this.createMarker = function(a) {
        var b, a = void 0 == a ? new google.maps.LatLng(37.525, 127) : new google.maps.LatLng(a[0], a[1]);
        return b = new google.maps.Marker({
            map: window.Scene.map,
            position: a,
            draggable: !0,
            animation: google.maps.Animation.DROP
        });
    }, this.createColoredMarker = function(a, b) {
        var c, d, e, b = void 0 == b ? new google.maps.LatLng(37.525, 127) : new google.maps.LatLng(b[0], b[1]);
        return d = new google.maps.MarkerImage("images/" + a + "-marker.png", new google.maps.Size(32, 32), new google.maps.Point(0, 0), new google.maps.Point(12, 32)), 
        e = new google.maps.MarkerImage("images/marker-shadow.png", new google.maps.Size(40, 37), new google.maps.Point(0, 0), new google.maps.Point(12, 32)), 
        c = new google.maps.Marker({
            map: window.Scene.map,
            position: b,
            draggable: !0,
            animation: google.maps.Animation.DROP,
            shadow: e,
            icon: d
        });
    }, this.populateMap = function() {
        window.Scene.events, _.each(window.Scene.events, function(a) {
            var b = new google.maps.LatLng(a.location.latitude, a.location.longitude);
            new google.maps.Marker({
                map: window.Scene.map,
                position: b,
                animation: google.maps.Animation.DROP,
                title: a.name
            });
        });
    }, this.setDefaultTimes = function() {
        var a = new Date(), b = a.getHours() + 1;
        $("#from_date").val(a.getMonth() + 1 + "/" + (b >= 24 ? a.getDate() + 1 : a.getDate()) + "/" + a.getFullYear()), 
        $("#to_date").val(a.getMonth() + 1 + "/" + (b + 1 >= 24 ? a.getDate() + 1 : a.getDate()) + "/" + a.getFullYear()), 
        $("#from_time").val((b > 12 ? b - 12 : b) + ":00 " + (24 === b || 12 > b ? "am" : "pm")), 
        $("#to_time").val((b + 1 > 12 ? b + 1 > 24 ? Math.ceil((b + 1) / 2) - 12 : b + 1 - 12 : b + 1) + ":00 " + (b + 1 >= 24 || 12 > b + 1 ? "am" : "pm"));
    }, this.findOnMap = function() {
        var b, c, d = new google.maps.Geocoder(), e = $("#create_event_modal"), f = $("#location_finder_popup");
        $(".create-event-btn").hide(), e.modal("hide"), f.fadeIn(600), f.draggable({
            containment: "parent"
        }).draggable("enable"), setTimeout(function() {
            b = [ window.Scene.map.getCenter().lat(), window.Scene.map.getCenter().lng() ], 
            c = a.createColoredMarker("blue", b), google.maps.event.addListener(c, "dragend", function() {
                d.geocode({
                    latLng: c.getPosition()
                }, function(a) {
                    $("#address").val(a[0].formatted_address);
                });
            });
        }, 500), $("#find_address").click(function() {
            return errorBadge = $("#location_finder_popup .badge"), address = $("#address").val(), 
            errorBadge.text("").tooltip("destroy"), address.length < 3 ? (errorBadge.text("!"), 
            errorBadge.tooltip({
                title: "Address too short",
                placement: "left"
            }), !1) : (d.geocode({
                address: address
            }, function(a, b) {
                return "OK" !== b && "ZERO_RESULTS" !== b ? (errorBadge.text("!"), errorBadge.tooltip({
                    title: "Unknown error",
                    placement: "left"
                }), !1) : "ZERO_RESULTS" === b ? (errorBadge.text("!"), errorBadge.tooltip({
                    title: "Address not found",
                    placement: "left"
                }), !1) : (c.setPosition(a[0].geometry.location), void 0);
            }), void 0);
        }), $("#accept_address").click(function() {
            $("#event_location").val($("#address").val()), c.setMap(null), e.modal("show"), 
            $(".create-event-btn").show(), f.fadeOut();
        }), $("#cancel_finder").click(function(a) {
            a.preventDefault(), $("#address").val(""), c.setMap(null), e.modal("show"), $(".create-event-btn").show(), 
            f.fadeOut(), f.draggable("disable");
        });
    }, this.createEvent = function() {
        var a = new google.maps.Geocoder(), b = {
            _creator: window.Scene.user._id,
            name: $("#event_name").val(),
            description: $("#event_description").val(),
            address: $("#event_location").val(),
            duration: {
                starttime: new Date($("#from_date").val() + " " + $("#from_time").val()),
                endtime: new Date($("#to_date").val() + " " + $("#to_time").val())
            }
        };
        a.geocode({
            address: b.address
        }, function(a) {
            b.location = {
                latitude: a[0].geometry.location.lat(),
                longitude: a[0].geometry.location.lng()
            }, window.socket.emit("Event.create", b), $("#create_event_modal").modal("hide");
        });
    };
}, function(a) {
    var b = window.Scene, c = new b.HomeController();
    (function() {
        if (Modernizr.geolocation) if (localStorage.getItem("currentLatitude") && localStorage.getItem("currentLongitude")) {
            var a = localStorage.getItem("currentLatitude"), b = localStorage.getItem("currentLongitude"), d = {
                coords: {
                    latitude: a,
                    longitude: b
                }
            };
            c.createMap(d);
        } else navigator.geolocation.getCurrentPosition(c.createMap); else console.log("Geolocation API not supported");
    })(), function() {
        var a = window.socket = null;
        null === a && (a = io.connect("/home"), a.on("connect", function() {}), a.on("message", function() {}), 
        a.on("disconnect", function() {}), a.on("Event.create", function(a) {
            c.createColoredMarker("green", [ a.location.latitude, a.location.longitude ]);
        })), a.socket.connect(), window.socket = a;
    }(), function() {
        a("#login").popover({
            html: !0,
            placement: "bottom",
            content: function() {
                return a("#login_popover_content").html();
            }
        }), a("#from_date").datepicker({
            minDate: new Date(),
            altField: a("#from_date"),
            dateFormat: "m/d/yy"
        }), a("#to_date").datepicker({
            minDate: new Date(),
            altField: a("#to_date"),
            dateFormat: "m/d/yy"
        }), a("#from_time, #to_time").focus(function(b) {
            a(b.target).siblings(".hour-select").show();
        }).keydown(function(b) {
            a(b.target).siblings(".hour-select").hide();
        }).blur(function(b) {
            a(b.target).siblings(".hour-select").hide();
        }), c.setDefaultTimes(), a("#create_event_modal").on("shown", function() {
            a("#event_name").focus();
        }), a("#event_submit").click(function(a) {
            a.preventDefault(), c.createEvent();
        }), a("#find_location").click(function(a) {
            a.preventDefault(), c.findOnMap();
        });
    }();
}(jQuery), function() {
    "use strict";
    window.Scene || (window.Scene = {}), window.Scene.PhotoView = Backbone.View.extend({
        tagName: "div",
        className: "photo",
        template: _.template("<img src='<%=e.image%>'/>"),
        initialize: function() {
            this.listenTo(this.model, "change", this.render), this.render();
        },
        render: function() {
            var a = this.model.get("position"), b = this.model.get("size");
            return this.$el.css({
                left: a.x - b.width / 2 + "%",
                top: a.y - b.height / 2 + "%",
                width: b.width + "%",
                height: b.height + "%",
                "-webkit-transform": "rotate(" + this.model.get("rotation") + "deg)"
            }), this.$el.html(this.template({
                e: this.model.toJSON()
            })), this;
        }
    });
}(jQuery);